@model AnimalKingdom.Server.Models.BindingModels.AnimalBindingModel
@{
    ViewBag.Title = "Добавяне на животно";
}

<h2>@ViewBag.Title</h2>
@Html.EditorForModel()

@section Styles {
    <link rel="stylesheet" href="~/Content/kendo.common.min.css" />
    <link rel="stylesheet" href="~/Content/kendo.common-bootstrap.core.min.css" />
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/kendo")
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDxIzpYYlvx6QP3KniWHrh_bQPltypjVIk&callback=initMap" async defer></script>
    <script>
        var map;
        var marker;

        function initMap() {
            map = new google.maps.Map(document.getElementById("new-animal-map"), {
                center: { lat: 42.803145, lng: 24.971192 },
                zoom: 13
            });

            navigator.geolocation.getCurrentPosition(function (position) {
                var userLatLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                placeMarker(userLatLng);
                map.setCenter(userLatLng);
            });

            google.maps.event.addListener(map, "click", function (e) {
                placeMarker(e.latLng);
            });

            function placeMarker(location) {
                if (marker) {
                    marker.setPosition(location);
                }
                else {
                    marker = new google.maps.Marker({
                        position: location,
                        map: map
                    });
                }
            }
        }

        $(document).ready(function () {
            $("#OtherFinderNames").kendoAutoComplete({
                dataSource: {
                    serverFiltering: true,
                    transport: {
                        read: {
                            url: "/Users/All",
                            type: "POST",
                            dataType: "json"
                        },
                        parameterMap: function (options, operation) {
                            var values = $("#OtherFinderNames").data("kendoAutoComplete").value().split(", ");
                            values.pop();
                            $.each(values, function (index, item) {
                                options.filter.filters.push({ field: "Username", ignoreCase: true, operator: "neq", value: item });
                            });

                            return options;
                        }
                    },
                    schema: {
                        model: {
                            id: "Id",
                            fields: {
                                Id: { type: "id" },
                                Name: { type: "string" }
                            }
                        }
                    }
                },
                dataTextField: "Username",
                filter: "contains",
                minLength: 3,
                placeholder: "Потребителски имена",
                separator: ", "
            }).data("kendoAutoComplete");

            $("#TypeId").change(function () {
                var typeId = $(this).val();
                var url = "/Breeds/All/" + typeId;
                $.post(url, null, function (data) {
                    var allBreeds = "";
                    for (var item in data) {
                        allBreeds += "<option value=\"" + data[item].Id + "\">" + data[item].Name + "</option>";
                    }

                    $("#BreedId").html(allBreeds);
                });
            });

            $("#new-animal-form").on("submit", function (e) {
                var markerValue = marker.position.lat() + ", " + marker.position.lng();
                $("#Location").val(markerValue);
            });
        });
    </script>
}